{"version":3,"sources":["PokemonCard.js","PokedexItem.js","PokemonDetailCard.js","PokedexDetail.js","Search.js","Pokedex.js","TeamBuilderItem.js","TeamBuilder.js","Pokemon.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","margin","backgroundColor","color","card","height","width","media","button","name","padding","PokemonCard","props","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","Avatar","id","toUpperCase","CardActions","Button","onClick","onPokemonSelect","pokemon","size","PokedexItem","sprites","front_default","types","species","theme","maxWidth","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","PokedexDetail","React","useState","expanded","setExpanded","speciesDetails","CardHeader","aria-label","subheader","data","genera","genus","flavor_text_entries","flavor_text","stats","base_stat","disableSpacing","IconButton","addPokemonToTeam","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","moves","map","move","PokemonDetail","state","getPokemonSpeciesDetails","a","axios","get","speciesDetailsURL","setState","console","log","this","PokemonDetailCard","Component","SearchBar","term","onInputChange","event","target","value","onFormSubmit","preventDefault","onSubmit","placeholder","type","onChange","Pokedex","renderedList","pokemonList","key","getPreviousPokemonList","getNextPokemonList","Grid","container","spacing","item","xs","selectedPokemon","TeamBuilderItem","currentMoves","setMove","action","onPokemonDelete","moveIndex","indexOf","splice","handleRemoveItem","length","oldArray","TeamBuilder","team","teamMember","index","Pokemon","ability","status","heldItem","weight","forms","App","currentResponse","getPokemon","pokemonArray","response","results","forEach","details","pokemonDetails","url","then","abilities","push","sort","pokemonOne","pokemonTwo","next","previous","currentTeamArray","teamMemberIndex","onTermSubmit","toLowerCase","pokemonData","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f552368.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    margin: 1,\r\n    backgroundColor: \"white\",\r\n    color: \"#e61d23\"\r\n  },\r\n  card: {\r\n    margin: 15,\r\n    height: 300,\r\n    width: 200,\r\n    backgroundColor: \"#e61d23\",\r\n    color: \"white\"\r\n  },\r\n  media: {\r\n    height: 140,\r\n    backgroundColor: \"white\"\r\n  },\r\n  button: {\r\n    backgroundColor: \"#186799\",\r\n    color: \"white\"\r\n  },\r\n  name: {\r\n    padding: 2\r\n  }\r\n});\r\n\r\nconst PokemonCard = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {props.name ? (\r\n        <Card className={classes.card}>\r\n          <CardActionArea>\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={props.image}\r\n              title={props.name}\r\n            />\r\n          </CardActionArea>\r\n          <CardActionArea>\r\n            <CardContent>\r\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                <Avatar className={classes.avatar}>{props.id}</Avatar>\r\n                <div className={classes.name}>{props.name.toUpperCase()}</div>\r\n              </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions>\r\n              <Button\r\n                onClick={() => props.onPokemonSelect(props.pokemon)}\r\n                variant=\"contained\"\r\n                className={classes.button}\r\n                size=\"small\"\r\n              >\r\n                Learn More\r\n              </Button>\r\n            </CardActions>\r\n          </CardActionArea>\r\n        </Card>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from \"react\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport axios from \"axios\";\r\n\r\nconst PokedexItem = props => {\r\n  return (\r\n    <div>\r\n      <PokemonCard\r\n        pokemon={props.pokemon}\r\n        image={props.pokemon.sprites.front_default}\r\n        name={props.pokemon.name}\r\n        types={props.pokemon.types}\r\n        species={props.pokemon.species}\r\n        id={props.pokemon.id}\r\n        onPokemonSelect={props.onPokemonSelect}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexItem;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nconst PokedexDetail = props => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <div>\r\n      {props.pokemon && props.speciesDetails ? (\r\n        <div>\r\n          <Card className={classes.card}>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar aria-label=\"pokemon-name\" className={classes.avatar}>\r\n                  {props.pokemon.id}\r\n                </Avatar>\r\n              }\r\n              title={props.pokemon.name.toUpperCase()}\r\n              subheader={props.speciesDetails.data.genera[2].genus}\r\n            />\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={props.pokemon.sprites.front_default}\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {props.speciesDetails.data.flavor_text_entries[1].flavor_text}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardContent>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                HP: {props.pokemon.stats[5].base_stat}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {\" \"}\r\n                Attack : {props.pokemon.stats[4].base_stat}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {\" \"}\r\n                Special Attack : {props.pokemon.stats[2].base_stat}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {\" \"}\r\n                Defense : {props.pokemon.stats[3].base_stat}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {\" \"}\r\n                Special Defense : {props.pokemon.stats[1].base_stat}\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                {\" \"}\r\n                Speed : {props.pokemon.stats[0].base_stat}\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions disableSpacing>\r\n              <IconButton\r\n                onClick={() => props.addPokemonToTeam(props.pokemon)}\r\n                aria-label=\"add to team\"\r\n              >\r\n                <AddIcon />\r\n              </IconButton>\r\n              <IconButton\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded\r\n                })}\r\n                onClick={handleExpandClick}\r\n                aria-expanded={expanded}\r\n                aria-label=\"moves\"\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </CardActions>\r\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n              <CardContent>\r\n                <Typography paragraph>\r\n                  {props.pokemon.moves.map(move => (\r\n                    <Typography>{move.move.name}</Typography>\r\n                  ))}\r\n                </Typography>\r\n              </CardContent>\r\n            </Collapse>\r\n          </Card>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokedexDetail;\r\n","import React from \"react\";\r\nimport PokemonDetailCard from \"./PokemonDetailCard\";\r\nimport axios from \"axios\";\r\n\r\nclass PokemonDetail extends React.Component {\r\n  state = {\r\n    speciesDetails: null\r\n  };\r\n\r\n  getPokemonSpeciesDetails = async () => {\r\n    if (this.props.pokemon) {\r\n      const speciesDetails = await axios.get(\r\n        this.props.pokemon.speciesDetailsURL\r\n      );\r\n      this.setState({\r\n        speciesDetails: speciesDetails\r\n      });\r\n      console.log(this.state.speciesDetails);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPokemonSpeciesDetails();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PokemonDetailCard\r\n        pokemon={this.props.pokemon}\r\n        addPokemonToTeam={this.props.addPokemonToTeam}\r\n        speciesDetails={this.state.speciesDetails}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PokemonDetail;\r\n","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: \"\" };\r\n\r\n  onInputChange = event => {\r\n    this.setState({ term: event.target.value });\r\n  };\r\n\r\n  onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onFormSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui center segment search-bar purple\">\r\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n          <div className=\"field\">\r\n            <input\r\n              placeholder=\"Enter a Pokemon's Name or Number\"\r\n              type=\"text\"\r\n              value={this.state.term}\r\n              onChange={this.onInputChange}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PokedexItem from \"./PokedexItem\";\r\nimport PokemonDetail from \"./PokedexDetail\";\r\nimport Search from \"./Search\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport \"./Pokedex.css\";\r\n\r\nclass Pokedex extends React.Component {\r\n  render() {\r\n    const renderedList = this.props.pokemonList.map(pokemon => {\r\n      return (\r\n        <PokedexItem\r\n          onPokemonSelect={this.props.onPokemonSelect}\r\n          key={pokemon.id}\r\n          pokemon={pokemon}\r\n        />\r\n      );\r\n    });\r\n    return renderedList ? (\r\n      <div>\r\n        <Search onFormSubmit={this.props.onFormSubmit} />\r\n\r\n        <IconButton onClick={() => this.props.getPreviousPokemonList()}>\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n\r\n        <IconButton onClick={() => this.props.getNextPokemonList()}>\r\n          <ArrowForwardIosIcon />\r\n        </IconButton>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6}>\r\n            {renderedList}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <PokemonDetail\r\n              pokemon={this.props.selectedPokemon}\r\n              addPokemonToTeam={this.props.addPokemonToTeam}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <IconButton onClick={() => this.props.getPreviousPokemonList()}>\r\n          <ArrowBackIosIcon />\r\n        </IconButton>\r\n        <IconButton onClick={() => this.props.getNextPokemonList()}>\r\n          <ArrowForwardIosIcon />\r\n        </IconButton>\r\n      </div>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nexport default Pokedex;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    maxWidth: 345\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\" // 16:9\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest\r\n    })\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500]\r\n  }\r\n}));\r\n\r\nconst TeamBuilderItem = props => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  const [currentMoves, setMove] = React.useState([])\r\n  \r\n  const handleRemoveItem = (move) => {\r\n    const moveIndex = currentMoves.indexOf(move)\r\n     setMove(currentMoves.splice(moveIndex, 1));\r\n   };\r\n\r\n  console.log(currentMoves)\r\n\r\n  return (\r\n    \r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {props.pokemon.id}\r\n          </Avatar>\r\n        }\r\n        action={\r\n          <IconButton\r\n            onClick={() => props.onPokemonDelete(props.pokemon)}\r\n            aria-label=\"settings\"\r\n          >\r\n            <RemoveCircleOutlineIcon />\r\n          </IconButton>\r\n        }\r\n        title={props.pokemon.name.toUpperCase()}\r\n       \r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={props.pokemon.sprites.front_default}\r\n        title=\"Paella dish\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          Current Moves\r\n          <hr />\r\n          {currentMoves.map(move => (\r\n<div onClick={() => handleRemoveItem(move)} className=\"move\"><Typography name={move}>{move.toUpperCase()}</Typography></div>\r\n                  ))}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <IconButton\r\n          className={clsx(classes.expand, {\r\n            [classes.expandOpen]: expanded\r\n          })}\r\n          onClick={handleExpandClick}\r\n          aria-expanded={expanded}\r\n          aria-label=\"show more\"\r\n        >\r\n          <ExpandMoreIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n        <CardContent>\r\n          <Typography paragraph>Moves:</Typography>\r\n        <Typography>{props.pokemon.moves.map(move => (\r\n                    <Typography className=\"move\" onClick={currentMoves.length < 4 ? () => setMove(oldArray => [...oldArray, move.move.name]) : null}>{move.move.name}</Typography>\r\n                  ))}</Typography>\r\n        </CardContent>\r\n      </Collapse>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TeamBuilderItem;\r\n","import React from \"react\";\r\nimport Search from \"./Search\";\r\nimport PokemonDetail from \"./PokemonCard\";\r\nimport TeamBuilderItem from \"./TeamBuilderItem\";\r\n\r\nclass TeamBuilder extends React.Component {\r\n  state = {\r\n    team: this.props.team\r\n  };\r\n\r\n  renderedList = this.state.team.map((teamMember, index) => {\r\n    return (\r\n      <TeamBuilderItem\r\n        onPokemonDelete={this.props.onPokemonDelete}\r\n        key={index}\r\n        pokemon={teamMember}\r\n      />\r\n    );\r\n  });\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Your Team</h1>\r\n        {/* <Search onFormSubmit={this.props.onFormSubmit} /> */}\r\n        {this.state.team ? this.renderedList : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TeamBuilder;\r\n","class Pokemon {\r\n  constructor(\r\n    name,\r\n    moves,\r\n    ability,\r\n    status,\r\n    heldItem,\r\n    types,\r\n    sprites,\r\n    stats,\r\n    weight,\r\n    forms,\r\n    id,\r\n    speciesDetailsURL\r\n  ) {\r\n    this.name = name;\r\n    this.moves = moves;\r\n    this.ability = ability;\r\n    this.status = status;\r\n    this.heldItem = heldItem;\r\n    this.types = types;\r\n    this.sprites = sprites;\r\n    this.stats = stats;\r\n    this.weight = weight;\r\n    this.forms = forms;\r\n    this.id = id;\r\n    this.speciesDetailsURL = speciesDetailsURL;\r\n  }\r\n}\r\n\r\nexport default Pokemon;\r\n","import React from \"react\";\r\nimport Pokedex from \"./Pokedex\";\r\nimport TeamBuilder from \"./TeamBuilder\";\r\nimport axios from \"axios\";\r\nimport Pokemon from \"./Pokemon\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    pokemonList: [],\r\n    currentResponse: null,\r\n    selectedPokemon: null,\r\n    team: []\r\n  };\r\n\r\n  getPokemon = async () => {\r\n    const pokemonArray = [];\r\n    const pokemonEndpoint = \"https://pokeapi.co/api/v2/pokemon/\";\r\n    const response = await axios.get(pokemonEndpoint);\r\n    const pokemonData = response.data.results;\r\n\r\n    pokemonData.forEach(details => {\r\n      let pokemonDetails;\r\n      axios.get(details.url).then(response => {\r\n        pokemonDetails = response.data;\r\n        // console.log(pokemonDetails);\r\n\r\n        const pokemon = new Pokemon(\r\n          pokemonDetails.species.name,\r\n          pokemonDetails.moves,\r\n          pokemonDetails.abilities,\r\n          null,\r\n          null,\r\n          pokemonDetails.types,\r\n          pokemonDetails.sprites,\r\n          pokemonDetails.stats,\r\n          pokemonDetails.weight,\r\n          pokemonDetails.forms,\r\n          pokemonDetails.id,\r\n          pokemonDetails.species.url\r\n        );\r\n\r\n        pokemonArray.push(pokemon);\r\n        pokemonArray.sort(\r\n          (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\r\n        );\r\n      });\r\n\r\n      this.setState({\r\n        pokemonList: pokemonArray,\r\n        currentResponse: response\r\n      });\r\n    });\r\n  };\r\n\r\n  getNextPokemonList = async () => {\r\n    const pokemonArray = [];\r\n    if (this.state.currentResponse) {\r\n      const response = await axios.get(this.state.currentResponse.data.next);\r\n      const pokemonData = response.data.results;\r\n      pokemonData.forEach(details => {\r\n        axios.get(details.url).then(response => {\r\n          const pokemonDetails = response.data;\r\n\r\n          const pokemon = new Pokemon(\r\n            pokemonDetails.species.name,\r\n            pokemonDetails.moves,\r\n            pokemonDetails.abilities,\r\n            null,\r\n            null,\r\n            pokemonDetails.types,\r\n            pokemonDetails.sprites,\r\n            pokemonDetails.stats,\r\n            pokemonDetails.weight,\r\n            pokemonDetails.forms,\r\n            pokemonDetails.id\r\n          );\r\n\r\n          pokemonArray.push(pokemon);\r\n\r\n          pokemonArray.sort(\r\n            (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\r\n          );\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        pokemonList: pokemonArray,\r\n        currentResponse: response\r\n      });\r\n    }\r\n  };\r\n\r\n  getPreviousPokemonList = async () => {\r\n    const pokemonArray = [];\r\n    if (this.state.currentResponse) {\r\n      const response = await axios.get(\r\n        this.state.currentResponse.data.previous\r\n      );\r\n      const pokemonData = response.data.results;\r\n      pokemonData.forEach(details => {\r\n        axios.get(details.url).then(response => {\r\n          const pokemonDetails = response.data;\r\n\r\n          const pokemon = new Pokemon(\r\n            pokemonDetails.species.name,\r\n            pokemonDetails.moves,\r\n            pokemonDetails.abilities,\r\n            null,\r\n            null,\r\n            pokemonDetails.types,\r\n            pokemonDetails.sprites,\r\n            pokemonDetails.stats,\r\n            pokemonDetails.weight,\r\n            pokemonDetails.forms,\r\n            pokemonDetails.id\r\n          );\r\n\r\n          pokemonArray.push(pokemon);\r\n\r\n          pokemonArray.sort(\r\n            (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\r\n          );\r\n        });\r\n      });\r\n\r\n      this.setState({\r\n        pokemonList: pokemonArray,\r\n        currentResponse: response\r\n      });\r\n    }\r\n  };\r\n\r\n  onPokemonSelect = pokemon => {\r\n    this.setState({\r\n      selectedPokemon: pokemon\r\n    });\r\n  };\r\n\r\n  onPokemonDelete = pokemon => {\r\n    let currentTeamArray = this.state.team;\r\n    let teamMemberIndex = currentTeamArray.indexOf(pokemon);\r\n\r\n    this.setState({\r\n      team: currentTeamArray.splice(teamMemberIndex + 1, 1)\r\n    });\r\n  \r\n  };\r\n\r\n  onTermSubmit = async term => {\r\n    const response = await axios.get(\r\n      `https://pokeapi.co/api/v2/pokemon/${term.toLowerCase()}`\r\n    );\r\n\r\n    const pokemonData = response.data;\r\n    console.log(pokemonData);\r\n    const pokemonArray = [];\r\n\r\n    const pokemon = new Pokemon(\r\n      pokemonData.species.name,\r\n      pokemonData.moves,\r\n      pokemonData.abilities,\r\n      null,\r\n      null,\r\n      pokemonData.types,\r\n      pokemonData.sprites,\r\n      pokemonData.stats,\r\n      pokemonData.weight,\r\n      pokemonData.forms,\r\n      pokemonData.id,\r\n      pokemonData.species.url\r\n    );\r\n\r\n    pokemonArray.push(pokemon);\r\n\r\n    this.setState({\r\n      pokemonList: pokemonArray,\r\n      selectedPokemon: pokemonArray[0]\r\n    });\r\n  };\r\n\r\n  addPokemonToTeam = pokemon => {\r\n    this.setState({\r\n      team: [...this.state.team, pokemon]\r\n    });\r\n    console.log(this.state.team);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPokemon();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n          <Router>\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link className=\"link\" to=\"/team-builder\">\r\n                    Team Builder\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"link\" to=\"/pokedex\">\r\n                    Search\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <Switch>\r\n              <Route\r\n                path=\"/team-builder\"\r\n                component={() => (\r\n                  <TeamBuilder\r\n                    onFormSubmit={this.onTermSubmit}\r\n                    addPokemonToTeam={this.addPokemonToTeam}\r\n                    pokemonList={this.state.pokemonList}\r\n                    team={this.state.team}\r\n                    onPokemonDelete={this.onPokemonDelete}\r\n                  />\r\n                )}\r\n              ></Route>\r\n              {/* <Route path=\"/battle\" component={Battle}></Route> */}\r\n              <Route\r\n                path=\"/pokedex\"\r\n                component={() => (\r\n                  <Pokedex\r\n                    addPokemonToTeam={this.addPokemonToTeam}\r\n                    pokemonList={this.state.pokemonList}\r\n                    getPokemon={this.getPokemon}\r\n                    getNextPokemonList={this.getNextPokemonList}\r\n                    getPreviousPokemonList={this.getPreviousPokemonList}\r\n                    selectedPokemon={this.state.selectedPokemon}\r\n                    onPokemonSelect={this.onPokemonSelect}\r\n                    onFormSubmit={this.onTermSubmit}\r\n                  />\r\n                )}\r\n              ></Route>\r\n            </Switch>\r\n          </Router>\r\n\r\n        {/* <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n            ></IconButton>\r\n            <Router>\r\n              <Typography variant=\"h6\">\r\n                <Link to=\"/\">Home</Link>\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                <Link to=\"/battle\">Battle</Link>\r\n              </Typography>\r\n              <Typography variant=\"h6\">\r\n                <Link to=\"/pokedex\">Pokedex</Link>\r\n              </Typography>\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Home}></Route>\r\n                <Route path=\"/battle\" component={Battle}></Route>\r\n                <Route\r\n                  path=\"/pokedex\"\r\n                  component={() => (\r\n                    <Pokedex\r\n                      pokemonList={this.state.pokemonList}\r\n                      getPokemon={this.getPokemon}\r\n                      getNextPokemonList={this.getNextPokemonList}\r\n                      getPreviousPokemonList={this.getPreviousPokemonList}\r\n                      selectedPokemon={this.state.selectedPokemon}\r\n                      onPokemonSelect={this.onPokemonSelect}\r\n                    />\r\n                  )}\r\n                ></Route>\r\n              </Switch>\r\n            </Router>\r\n          </Toolbar>\r\n        </AppBar> */}\r\n        {/* <NavBar\r\n          pokemonList={this.state.pokemonList}\r\n          getPokemon={this.getPokemon}\r\n          getNextPokemonList={this.getNextPokemonList}\r\n          getPreviousPokemonList={this.getPreviousPokemonList}\r\n          selectedPokemon={this.state.selectedPokemon}\r\n          onPokemonSelect={this.onPokemonSelect}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}