{"version":3,"sources":["PokemonCard.js","PokedexItem.js","PokemonDetailCard.js","PokedexDetail.js","Search.js","Pokedex.js","TeamBuilderItem.js","TeamBuilder.js","Pokemon.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","margin","backgroundColor","color","card","height","width","media","button","name","padding","PokemonCard","props","classes","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","Avatar","id","toUpperCase","CardActions","onClick","onPokemonSelect","pokemon","Button","size","PokedexItem","sprites","front_default","types","species","theme","maxWidth","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","PokedexDetail","React","useState","expanded","setExpanded","speciesDetails","CardHeader","aria-label","subheader","data","genera","genus","flavor_text_entries","flavor_text","stats","base_stat","disableSpacing","IconButton","addPokemonToTeam","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","moves","map","move","replace","PokemonDetail","state","getPokemonSpeciesDetails","a","axios","get","speciesDetailsURL","setState","console","log","this","PokemonDetailCard","Component","SearchBar","term","onInputChange","event","target","value","onFormSubmit","preventDefault","onSubmit","placeholder","type","onChange","Pokedex","renderedList","pokemonList","key","getPreviousPokemonList","getNextPokemonList","Grid","container","spacing","item","xs","selectedPokemon","TeamBuilderItem","currentMoves","setMove","action","onPokemonDelete","moveIndex","indexOf","splice","handleRemoveItem","length","oldArray","TeamBuilder","team","teamMember","index","Pokemon","ability","status","heldItem","weight","forms","App","currentResponse","getPokemon","pokemonArray","response","results","forEach","details","pokemonDetails","url","then","abilities","push","sort","pokemonOne","pokemonTwo","next","previous","currentTeamArray","teamMemberIndex","onTermSubmit","toLowerCase","pokemonData","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58fe85fd.chunk.js","sourcesContent":["import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    margin: 1,\n    backgroundColor: \"white\",\n    color: \"#e61d23\"\n  },\n  card: {\n    margin: 15,\n    height: 300,\n    width: 200,\n    backgroundColor: \"#e61d23\",\n    color: \"white\"\n  },\n  media: {\n    height: 140,\n    backgroundColor: \"white\"\n  },\n  button: {\n    backgroundColor: \"#186799\",\n    color: \"white\"\n  },\n  name: {\n    padding: 2\n  }\n});\n\nconst PokemonCard = props => {\n  const classes = useStyles();\n  return (\n    <div>\n      {props.name ? (\n        <Card className={classes.card}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={props.image}\n              title={props.name}\n            />\n          </CardActionArea>\n          <CardActionArea>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                <Avatar className={classes.avatar}>{props.id}</Avatar>\n                {props.name.toUpperCase()}\n              </Typography>\n            </CardContent>\n\n            <CardActions onClick={() => props.onPokemonSelect(props.pokemon)}>\n              <Button\n                variant=\"contained\"\n                className={classes.button}\n                size=\"small\"\n              >\n                Learn More\n              </Button>\n            </CardActions>\n          </CardActionArea>\n        </Card>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import React from \"react\";\nimport PokemonCard from \"./PokemonCard\";\nimport axios from \"axios\";\n\nconst PokedexItem = props => {\n  return (\n    <div>\n      <PokemonCard\n        pokemon={props.pokemon}\n        image={props.pokemon.sprites.front_default}\n        name={props.pokemon.name}\n        types={props.pokemon.types}\n        species={props.pokemon.species}\n        id={props.pokemon.id}\n        onPokemonSelect={props.onPokemonSelect}\n      />\n    </div>\n  );\n};\n\nexport default PokedexItem;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst PokedexDetail = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n \n\n  return (\n    <div>\n      {props.pokemon && props.speciesDetails ? (\n        <div>\n          <Card className={classes.card}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"pokemon-name\" className={classes.avatar}>\n                  {props.pokemon.id}\n                </Avatar>\n              }\n              title={props.pokemon.name.toUpperCase()}\n              subheader={props.speciesDetails.data.genera[2].genus}\n            />\n            <CardMedia\n              className={classes.media}\n              image={props.pokemon.sprites.front_default}\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {props.speciesDetails.data.flavor_text_entries[1].flavor_text}\n              </Typography>\n            </CardContent>\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                HP: {props.pokemon.stats[5].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Attack : {props.pokemon.stats[4].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Special Attack : {props.pokemon.stats[2].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Defense : {props.pokemon.stats[3].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Special Defense : {props.pokemon.stats[1].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Speed : {props.pokemon.stats[0].base_stat}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton\n                onClick={() => props.addPokemonToTeam(props.pokemon)}\n                aria-label=\"add to team\"\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"moves\"\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Typography paragraph>\n                  {props.pokemon.moves.map(move => (\n                    <Typography>\n                      {move.move.name.toUpperCase().replace(/-/g, \" \")}\n                    </Typography>\n                  ))}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </Card>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PokedexDetail;\n","import React from \"react\";\nimport PokemonDetailCard from \"./PokemonDetailCard\";\nimport axios from \"axios\";\n\nclass PokemonDetail extends React.Component {\n  state = {\n    speciesDetails: null\n  };\n\n  getPokemonSpeciesDetails = async () => {\n    if (this.props.pokemon) {\n      const speciesDetails = await axios.get(\n        this.props.pokemon.speciesDetailsURL\n      );\n      this.setState({\n        speciesDetails: speciesDetails\n      });\n      console.log(this.state.speciesDetails);\n    }\n  };\n\n  componentDidMount() {\n    this.getPokemonSpeciesDetails();\n  }\n\n  render() {\n    return (\n      <PokemonDetailCard\n        pokemon={this.props.pokemon}\n        addPokemonToTeam={this.props.addPokemonToTeam}\n        speciesDetails={this.state.speciesDetails}\n      />\n    );\n  }\n}\n\nexport default PokemonDetail;\n","import React from \"react\";\nimport \"./Search.css\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n\n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    this.props.onFormSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui center segment search-bar purple\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <input\n              placeholder=\"Enter a Pokemon's Name or Number\"\n              type=\"text\"\n              value={this.state.term}\n              onChange={this.onInputChange}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PokedexItem from \"./PokedexItem\";\nimport PokemonDetail from \"./PokedexDetail\";\nimport Search from \"./Search\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport \"./Pokedex.css\";\n\nclass Pokedex extends React.Component {\n  render() {\n    const renderedList = this.props.pokemonList.map(pokemon => {\n      return (\n        <PokedexItem\n          onPokemonSelect={this.props.onPokemonSelect}\n          key={pokemon.id}\n          pokemon={pokemon}\n        />\n      );\n    });\n    return renderedList ? (\n      <div>\n        <Search onFormSubmit={this.props.onFormSubmit} />\n\n        <IconButton onClick={() => this.props.getPreviousPokemonList()}>\n          <ArrowBackIosIcon />\n        </IconButton>\n\n        <IconButton onClick={() => this.props.getNextPokemonList()}>\n          <ArrowForwardIosIcon />\n        </IconButton>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            {renderedList}\n          </Grid>\n          <Grid item xs={6}>\n            <PokemonDetail\n              pokemon={this.props.selectedPokemon}\n              addPokemonToTeam={this.props.addPokemonToTeam}\n            />\n          </Grid>\n        </Grid>\n        <IconButton onClick={() => this.props.getPreviousPokemonList()}>\n          <ArrowBackIosIcon />\n        </IconButton>\n        <IconButton onClick={() => this.props.getNextPokemonList()}>\n          <ArrowForwardIosIcon />\n        </IconButton>\n      </div>\n    ) : null;\n  }\n}\n\nexport default Pokedex;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst TeamBuilderItem = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const [currentMoves, setMove] = React.useState([]);\n\n  const handleRemoveItem = move => {\n    const moveIndex = currentMoves.indexOf(move);\n    setMove(currentMoves.splice(moveIndex + 1, 1));\n  };\n\n  console.log(currentMoves);\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {props.pokemon.id}\n          </Avatar>\n        }\n        action={\n          <IconButton\n            onClick={() => props.onPokemonDelete(props.pokemon)}\n            aria-label=\"settings\"\n          >\n            <RemoveCircleOutlineIcon />\n          </IconButton>\n        }\n        title={props.pokemon.name.toUpperCase()}\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.pokemon.sprites.front_default}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Current Moves\n          <hr />\n          {currentMoves.map(move => (\n            <div onClick={() => handleRemoveItem(move)} className=\"move\">\n              <Typography name={move}>\n                {move.toUpperCase().replace(/-/g, \" \")}\n              </Typography>\n            </div>\n          ))}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Moves:</Typography>\n\n          <Typography>\n            {props.pokemon.moves.map(move => (\n              <Typography\n                className=\"move\"\n                onClick={\n                  currentMoves.length < 4\n                    ? () => setMove(oldArray => [...oldArray, move.move.name])\n                    : null\n                }\n              >\n                {move.move.name.toUpperCase().replace(/-/g, \" \")}\n              </Typography>\n            ))}\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default TeamBuilderItem;\n","import React from \"react\";\nimport Search from \"./Search\";\nimport PokemonDetail from \"./PokemonCard\";\nimport TeamBuilderItem from \"./TeamBuilderItem\";\n\nclass TeamBuilder extends React.Component {\n  state = {\n    team: this.props.team\n  };\n\n  renderedList = this.state.team.map((teamMember, index) => {\n    return (\n      <TeamBuilderItem\n        onPokemonDelete={this.props.onPokemonDelete}\n        key={index}\n        pokemon={teamMember}\n      />\n    );\n  });\n  render() {\n    return (\n      <div>\n        <h1>Your Team</h1>\n        {/* <Search onFormSubmit={this.props.onFormSubmit} /> */}\n        {this.state.team ? this.renderedList : null}\n      </div>\n    );\n  }\n}\n\nexport default TeamBuilder;\n","class Pokemon {\n  constructor(\n    name,\n    moves,\n    ability,\n    status,\n    heldItem,\n    types,\n    sprites,\n    stats,\n    weight,\n    forms,\n    id,\n    speciesDetailsURL\n  ) {\n    this.name = name;\n    this.moves = moves;\n    this.ability = ability;\n    this.status = status;\n    this.heldItem = heldItem;\n    this.types = types;\n    this.sprites = sprites;\n    this.stats = stats;\n    this.weight = weight;\n    this.forms = forms;\n    this.id = id;\n    this.speciesDetailsURL = speciesDetailsURL;\n  }\n}\n\nexport default Pokemon;\n","import React from \"react\";\nimport Pokedex from \"./Pokedex\";\nimport TeamBuilder from \"./TeamBuilder\";\nimport axios from \"axios\";\nimport Pokemon from \"./Pokemon\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\n\nclass App extends React.Component {\n  state = {\n    pokemonList: [],\n    currentResponse: null,\n    selectedPokemon: null,\n    team: []\n  };\n\n  getPokemon = async () => {\n    const pokemonArray = [];\n    const pokemonEndpoint = \"https://pokeapi.co/api/v2/pokemon/\";\n    const response = await axios.get(pokemonEndpoint);\n    const pokemonData = response.data.results;\n\n    pokemonData.forEach(details => {\n      let pokemonDetails;\n      axios.get(details.url).then(response => {\n        pokemonDetails = response.data;\n        // console.log(pokemonDetails);\n\n        const pokemon = new Pokemon(\n          pokemonDetails.species.name,\n          pokemonDetails.moves,\n          pokemonDetails.abilities,\n          null,\n          null,\n          pokemonDetails.types,\n          pokemonDetails.sprites,\n          pokemonDetails.stats,\n          pokemonDetails.weight,\n          pokemonDetails.forms,\n          pokemonDetails.id,\n          pokemonDetails.species.url\n        );\n\n        pokemonArray.push(pokemon);\n        pokemonArray.sort(\n          (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\n        );\n      });\n\n      this.setState({\n        pokemonList: pokemonArray,\n        currentResponse: response\n      });\n    });\n  };\n\n  getNextPokemonList = async () => {\n    const pokemonArray = [];\n    if (this.state.currentResponse) {\n      const response = await axios.get(this.state.currentResponse.data.next);\n      const pokemonData = response.data.results;\n      pokemonData.forEach(details => {\n        axios.get(details.url).then(response => {\n          const pokemonDetails = response.data;\n\n          const pokemon = new Pokemon(\n            pokemonDetails.species.name,\n            pokemonDetails.moves,\n            pokemonDetails.abilities,\n            null,\n            null,\n            pokemonDetails.types,\n            pokemonDetails.sprites,\n            pokemonDetails.stats,\n            pokemonDetails.weight,\n            pokemonDetails.forms,\n            pokemonDetails.id\n          );\n\n          pokemonArray.push(pokemon);\n\n          pokemonArray.sort(\n            (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\n          );\n        });\n      });\n\n      this.setState({\n        pokemonList: pokemonArray,\n        currentResponse: response\n      });\n    }\n  };\n\n  getPreviousPokemonList = async () => {\n    const pokemonArray = [];\n    if (this.state.currentResponse) {\n      const response = await axios.get(\n        this.state.currentResponse.data.previous\n      );\n      const pokemonData = response.data.results;\n      pokemonData.forEach(details => {\n        axios.get(details.url).then(response => {\n          const pokemonDetails = response.data;\n\n          const pokemon = new Pokemon(\n            pokemonDetails.species.name,\n            pokemonDetails.moves,\n            pokemonDetails.abilities,\n            null,\n            null,\n            pokemonDetails.types,\n            pokemonDetails.sprites,\n            pokemonDetails.stats,\n            pokemonDetails.weight,\n            pokemonDetails.forms,\n            pokemonDetails.id\n          );\n\n          pokemonArray.push(pokemon);\n\n          pokemonArray.sort(\n            (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\n          );\n        });\n      });\n\n      this.setState({\n        pokemonList: pokemonArray,\n        currentResponse: response\n      });\n    }\n  };\n\n  onPokemonSelect = pokemon => {\n    this.setState({\n      selectedPokemon: pokemon\n    });\n  };\n\n  onPokemonDelete = pokemon => {\n    let currentTeamArray = this.state.team;\n    let teamMemberIndex = currentTeamArray.indexOf(pokemon);\n\n    this.setState({\n      team: currentTeamArray.splice(teamMemberIndex + 1, 1)\n    });\n  };\n\n  onTermSubmit = async term => {\n    const response = await axios.get(\n      `https://pokeapi.co/api/v2/pokemon/${term.toLowerCase()}`\n    );\n\n    const pokemonData = response.data;\n    console.log(pokemonData);\n    const pokemonArray = [];\n\n    const pokemon = new Pokemon(\n      pokemonData.species.name,\n      pokemonData.moves,\n      pokemonData.abilities,\n      null,\n      null,\n      pokemonData.types,\n      pokemonData.sprites,\n      pokemonData.stats,\n      pokemonData.weight,\n      pokemonData.forms,\n      pokemonData.id,\n      pokemonData.species.url\n    );\n\n    pokemonArray.push(pokemon);\n\n    this.setState({\n      pokemonList: pokemonArray,\n      selectedPokemon: pokemonArray[0]\n    });\n  };\n\n  addPokemonToTeam = pokemon => {\n    this.setState({\n      team: [...this.state.team, pokemon]\n    });\n    console.log(this.state.team);\n  };\n\n  componentDidMount() {\n    this.getPokemon();\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <nav>\n            <ul>\n              <li>\n                <Link className=\"link\" to=\"/team-builder\">\n                  Team Builder\n                </Link>\n              </li>\n              <li>\n                <Link className=\"link\" to=\"/pokedex\">\n                  Pokedex\n                </Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route\n              path=\"/team-builder\"\n              component={() => (\n                <TeamBuilder\n                  onFormSubmit={this.onTermSubmit}\n                  addPokemonToTeam={this.addPokemonToTeam}\n                  pokemonList={this.state.pokemonList}\n                  team={this.state.team}\n                  onPokemonDelete={this.onPokemonDelete}\n                />\n              )}\n            ></Route>\n            {/* <Route path=\"/battle\" component={Battle}></Route> */}\n            <Route\n              path=\"/pokedex\"\n              component={() => (\n                <Pokedex\n                  addPokemonToTeam={this.addPokemonToTeam}\n                  pokemonList={this.state.pokemonList}\n                  getPokemon={this.getPokemon}\n                  getNextPokemonList={this.getNextPokemonList}\n                  getPreviousPokemonList={this.getPreviousPokemonList}\n                  selectedPokemon={this.state.selectedPokemon}\n                  onPokemonSelect={this.onPokemonSelect}\n                  onFormSubmit={this.onTermSubmit}\n                />\n              )}\n            ></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}