{"version":3,"sources":["PokemonCard.js","PokedexItem.js","PokemonDetailCard.js","PokedexDetail.js","Search.js","Pokedex.js","TeamBuilderItem.js","TeamBuilder.js","Pokemon.js","App.js","index.js"],"names":["useStyles","makeStyles","avatar","margin","backgroundColor","color","card","height","width","media","button","PokemonCard","props","classes","name","Card","className","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","Avatar","id","CardActions","Button","onClick","onPokemonSelect","pokemon","size","PokedexItem","sprites","front_default","types","species","theme","maxWidth","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","red","PokedexDetail","React","useState","expanded","setExpanded","speciesDetails","CardHeader","aria-label","subheader","data","genera","genus","flavor_text_entries","flavor_text","stats","base_stat","disableSpacing","IconButton","addPokemonToTeam","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","paragraph","moves","map","move","PokemonDetail","state","getPokemonSpeciesDetails","a","axios","get","speciesDetailsURL","setState","console","log","this","PokemonDetailCard","Component","SearchBar","term","onInputChange","event","target","value","onFormSubmit","preventDefault","onSubmit","placeholder","type","onChange","Pokedex","renderedList","pokemonList","key","getPreviousPokemonList","getNextPokemonList","Grid","container","spacing","item","xs","selectedPokemon","withRouter","TeamBuilderItem","action","TeamBuilder","team","teamMember","index","Pokemon","ability","status","heldItem","weight","forms","App","currentResponse","getPokemon","pokemonArray","response","results","forEach","details","pokemonDetails","url","then","abilities","push","sort","pokemonOne","pokemonTwo","next","previous","onTermSubmit","pokemonData","to","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.475c69ca.chunk.js","sourcesContent":["import React from \"react\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  avatar: {\n    margin: 1,\n    backgroundColor: \"white\",\n    color: \"#e61d23\"\n  },\n  card: {\n    margin: 15,\n    height: 300,\n    width: 200,\n    backgroundColor: \"#e61d23\",\n    color: \"white\"\n  },\n  media: {\n    height: 140,\n    backgroundColor: \"white\"\n  },\n  button: {\n    backgroundColor: \"#186799\",\n    color: \"white\"\n  }\n});\n\nconst PokemonCard = props => {\n  const classes = useStyles();\n  return (\n    <div>\n      {props.name ? (\n        <Card className={classes.card}>\n          <CardActionArea>\n            <CardMedia\n              className={classes.media}\n              image={props.image}\n              title={props.name}\n            />\n          </CardActionArea>\n          <CardActionArea>\n            <CardContent>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                <Avatar className={classes.avatar}>{props.id}</Avatar>\n                {props.name}\n              </Typography>\n            </CardContent>\n\n            <CardActions>\n              <Button\n                onClick={() => props.onPokemonSelect(props.pokemon)}\n                variant=\"contained\"\n                className={classes.button}\n                size=\"small\"\n              >\n                Learn More\n              </Button>\n            </CardActions>\n          </CardActionArea>\n        </Card>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PokemonCard;\n","import React from \"react\";\nimport PokemonCard from \"./PokemonCard\";\nimport axios from \"axios\";\n\nconst PokedexItem = props => {\n  return (\n    <div>\n      <PokemonCard\n        pokemon={props.pokemon}\n        image={props.pokemon.sprites.front_default}\n        name={props.pokemon.name}\n        types={props.pokemon.types}\n        species={props.pokemon.species}\n        id={props.pokemon.id}\n        onPokemonSelect={props.onPokemonSelect}\n      />\n    </div>\n  );\n};\n\nexport default PokedexItem;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst PokedexDetail = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <div>\n      {props.pokemon && props.speciesDetails ? (\n        <div>\n          <Card className={classes.card}>\n            <CardHeader\n              avatar={\n                <Avatar aria-label=\"pokemon-name\" className={classes.avatar}>\n                  {props.pokemon.id}\n                </Avatar>\n              }\n              title={props.pokemon.name}\n              subheader={props.speciesDetails.data.genera[2].genus}\n            />\n            <CardMedia\n              className={classes.media}\n              image={props.pokemon.sprites.front_default}\n              title=\"Paella dish\"\n            />\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {props.speciesDetails.data.flavor_text_entries[1].flavor_text}\n              </Typography>\n            </CardContent>\n            <CardContent>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                HP: {props.pokemon.stats[5].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Attack : {props.pokemon.stats[4].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Special Attack : {props.pokemon.stats[2].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Defense : {props.pokemon.stats[3].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Special Defense : {props.pokemon.stats[1].base_stat}\n              </Typography>\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                {\" \"}\n                Speed : {props.pokemon.stats[0].base_stat}\n              </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n              <IconButton\n                onClick={() => props.addPokemonToTeam(props.pokemon)}\n                aria-label=\"add to team\"\n              >\n                <AddIcon />\n              </IconButton>\n              <IconButton\n                className={clsx(classes.expand, {\n                  [classes.expandOpen]: expanded\n                })}\n                onClick={handleExpandClick}\n                aria-expanded={expanded}\n                aria-label=\"moves\"\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n              <CardContent>\n                <Typography paragraph>\n                  {props.pokemon.moves.map(move => (\n                    <Typography>{move.move.name}</Typography>\n                  ))}\n                </Typography>\n              </CardContent>\n            </Collapse>\n          </Card>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default PokedexDetail;\n","import React from \"react\";\nimport PokemonDetailCard from \"./PokemonDetailCard\";\nimport axios from \"axios\";\n\nclass PokemonDetail extends React.Component {\n  state = {\n    speciesDetails: null\n  };\n\n  getPokemonSpeciesDetails = async () => {\n    if (this.props.pokemon) {\n      const speciesDetails = await axios.get(\n        this.props.pokemon.speciesDetailsURL\n      );\n      this.setState({\n        speciesDetails: speciesDetails\n      });\n      console.log(this.state.speciesDetails);\n    }\n  };\n\n  componentWillMount() {\n    this.getPokemonSpeciesDetails();\n  }\n\n  render() {\n    return (\n      <PokemonDetailCard\n        pokemon={this.props.pokemon}\n        addPokemonToTeam={this.props.addPokemonToTeam}\n        speciesDetails={this.state.speciesDetails}\n      />\n    );\n  }\n}\n\nexport default PokemonDetail;\n","import React from \"react\";\nimport \"./Search.css\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n\n  onInputChange = event => {\n    this.setState({ term: event.target.value });\n  };\n\n  onFormSubmit = event => {\n    event.preventDefault();\n\n    this.props.onFormSubmit(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"ui center segment search-bar purple\">\n        <form className=\"ui form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <input\n              placeholder=\"Enter a Pokemon's Name or Number\"\n              type=\"text\"\n              value={this.state.term}\n              onChange={this.onInputChange}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport PokedexItem from \"./PokedexItem\";\nimport PokemonDetail from \"./PokedexDetail\";\nimport Search from \"./Search\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ArrowForwardIosIcon from \"@material-ui/icons/ArrowForwardIos\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { withRouter } from \"react-router\";\nimport \"./Pokedex.css\";\n\nclass Pokedex extends React.Component {\n  render() {\n    const renderedList = this.props.pokemonList.map(pokemon => {\n      return (\n        <PokedexItem\n          onPokemonSelect={this.props.onPokemonSelect}\n          key={pokemon.id}\n          pokemon={pokemon}\n        />\n      );\n    });\n    return renderedList ? (\n      <div>\n        <Search onFormSubmit={this.props.onFormSubmit} />\n\n        <IconButton onClick={() => this.props.getPreviousPokemonList()}>\n          <ArrowBackIosIcon />\n        </IconButton>\n\n        <IconButton onClick={() => this.props.getNextPokemonList()}>\n          <ArrowForwardIosIcon />\n        </IconButton>\n        <Grid container spacing={3}>\n          <Grid item xs={6}>\n            {renderedList}\n          </Grid>\n          <Grid item xs={6}>\n            <PokemonDetail\n              pokemon={this.props.selectedPokemon}\n              addPokemonToTeam={this.props.addPokemonToTeam}\n            />\n          </Grid>\n        </Grid>\n        <IconButton onClick={() => this.props.getPreviousPokemonList()}>\n          <ArrowBackIosIcon />\n        </IconButton>\n        <IconButton onClick={() => this.props.getNextPokemonList()}>\n          <ArrowForwardIosIcon />\n        </IconButton>\n      </div>\n    ) : null;\n  }\n}\n\nexport default withRouter(Pokedex);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: \"56.25%\" // 16:9\n  },\n  expand: {\n    transform: \"rotate(0deg)\",\n    marginLeft: \"auto\",\n    transition: theme.transitions.create(\"transform\", {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: \"rotate(180deg)\"\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\n\nconst TeamBuilderItem = props => {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            {props.pokemon.id}\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <RemoveCircleOutlineIcon />\n          </IconButton>\n        }\n        title={props.pokemon.name}\n        subheader=\"Species\"\n      />\n      <CardMedia\n        className={classes.media}\n        image={props.pokemon.sprites.front_default}\n        title=\"Paella dish\"\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          Current Moves\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Moves:</Typography>\n          <Typography></Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport default TeamBuilderItem;\n","import React from \"react\";\nimport Search from \"./Search\";\nimport PokemonDetail from \"./PokemonCard\";\nimport TeamBuilderItem from \"./TeamBuilderItem\";\n\nclass TeamBuilder extends React.Component {\n  state = {\n    team: this.props.team\n  };\n\n  renderedList = this.state.team.map((teamMember, index) => {\n    return <TeamBuilderItem key={index} pokemon={teamMember} />;\n  });\n  render() {\n    return (\n      <div>\n        <h1>Your Team</h1>\n        {/* <Search onFormSubmit={this.props.onFormSubmit} /> */}\n        {this.state.team ? this.renderedList : null}\n      </div>\n    );\n  }\n}\n\nexport default TeamBuilder;\n","class Pokemon {\n  constructor(\n    name,\n    moves,\n    ability,\n    status,\n    heldItem,\n    types,\n    sprites,\n    stats,\n    weight,\n    forms,\n    id,\n    speciesDetailsURL\n  ) {\n    this.name = name;\n    this.moves = moves;\n    this.ability = ability;\n    this.status = status;\n    this.heldItem = heldItem;\n    this.types = types;\n    this.sprites = sprites;\n    this.stats = stats;\n    this.weight = weight;\n    this.forms = forms;\n    this.id = id;\n    this.speciesDetailsURL = speciesDetailsURL;\n  }\n}\n\nexport default Pokemon;\n","import React from \"react\";\nimport Pokedex from \"./Pokedex\";\nimport TeamBuilder from \"./TeamBuilder\";\nimport axios from \"axios\";\nimport Pokemon from \"./Pokemon\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    pokemonList: [],\n    currentResponse: null,\n    selectedPokemon: null,\n    team: []\n  };\n\n  getPokemon = async () => {\n    const pokemonArray = [];\n    const pokemonEndpoint = \"https://pokeapi.co/api/v2/pokemon/\";\n    const response = await axios.get(pokemonEndpoint);\n    const pokemonData = response.data.results;\n\n    pokemonData.forEach(details => {\n      let pokemonDetails;\n      axios.get(details.url).then(response => {\n        pokemonDetails = response.data;\n        // console.log(pokemonDetails);\n\n        const pokemon = new Pokemon(\n          pokemonDetails.species.name,\n          pokemonDetails.moves,\n          pokemonDetails.abilities,\n          null,\n          null,\n          pokemonDetails.types,\n          pokemonDetails.sprites,\n          pokemonDetails.stats,\n          pokemonDetails.weight,\n          pokemonDetails.forms,\n          pokemonDetails.id,\n          pokemonDetails.species.url\n        );\n\n        pokemonArray.push(pokemon);\n        pokemonArray.sort(\n          (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\n        );\n      });\n\n      this.setState({\n        pokemonList: pokemonArray,\n        currentResponse: response\n      });\n    });\n  };\n\n  getNextPokemonList = async () => {\n    const pokemonArray = [];\n    if (this.state.currentResponse) {\n      const response = await axios.get(this.state.currentResponse.data.next);\n      const pokemonData = response.data.results;\n      pokemonData.forEach(details => {\n        axios.get(details.url).then(response => {\n          const pokemonDetails = response.data;\n\n          const pokemon = new Pokemon(\n            pokemonDetails.species.name,\n            pokemonDetails.moves,\n            pokemonDetails.abilities,\n            null,\n            null,\n            pokemonDetails.types,\n            pokemonDetails.sprites,\n            pokemonDetails.stats,\n            pokemonDetails.weight,\n            pokemonDetails.forms,\n            pokemonDetails.id\n          );\n\n          pokemonArray.push(pokemon);\n\n          pokemonArray.sort(\n            (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\n          );\n        });\n      });\n\n      this.setState({\n        pokemonList: pokemonArray,\n        currentResponse: response\n      });\n    }\n  };\n\n  getPreviousPokemonList = async () => {\n    const pokemonArray = [];\n    if (this.state.currentResponse) {\n      const response = await axios.get(\n        this.state.currentResponse.data.previous\n      );\n      const pokemonData = response.data.results;\n      pokemonData.forEach(details => {\n        axios.get(details.url).then(response => {\n          const pokemonDetails = response.data;\n\n          const pokemon = new Pokemon(\n            pokemonDetails.species.name,\n            pokemonDetails.moves,\n            pokemonDetails.abilities,\n            null,\n            null,\n            pokemonDetails.types,\n            pokemonDetails.sprites,\n            pokemonDetails.stats,\n            pokemonDetails.weight,\n            pokemonDetails.forms,\n            pokemonDetails.id\n          );\n\n          pokemonArray.push(pokemon);\n\n          pokemonArray.sort(\n            (pokemonOne, pokemonTwo) => pokemonOne.id - pokemonTwo.id\n          );\n        });\n      });\n\n      this.setState({\n        pokemonList: pokemonArray,\n        currentResponse: response\n      });\n    }\n  };\n\n  onPokemonSelect = pokemon => {\n    this.setState({\n      selectedPokemon: pokemon\n    });\n  };\n\n  onTermSubmit = async term => {\n    const response = await axios.get(\n      `https://pokeapi.co/api/v2/pokemon/${term}`\n    );\n\n    const pokemonData = response.data;\n    console.log(pokemonData);\n    const pokemonArray = [];\n\n    const pokemon = new Pokemon(\n      pokemonData.species.name,\n      pokemonData.moves,\n      pokemonData.abilities,\n      null,\n      null,\n      pokemonData.types,\n      pokemonData.sprites,\n      pokemonData.stats,\n      pokemonData.weight,\n      pokemonData.forms,\n      pokemonData.id,\n      pokemonData.species.url\n    );\n\n    pokemonArray.push(pokemon);\n\n    this.setState({\n      pokemonList: pokemonArray,\n      selectedPokemon: pokemonArray[0]\n    });\n  };\n\n  addPokemonToTeam = pokemon => {\n    this.setState({\n      team: [...this.state.team, pokemon]\n    });\n    console.log(this.state.team);\n  };\n\n  componentDidMount() {\n    this.getPokemon();\n  }\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/team-builder\">Team Builder</Link>\n              </li>\n              {/* <li>\n                <Link to=\"/battle\">Battle</Link>\n              </li> */}\n              <li>\n                <Link to=\"/pokedex\">Pokedex</Link>\n              </li>\n            </ul>\n          </nav>\n          <Switch>\n            <Route\n              path=\"/team-builder\"\n              component={() => (\n                <TeamBuilder\n                  onFormSubmit={this.onTermSubmit}\n                  addPokemonToTeam={this.addPokemonToTeam}\n                  pokemonList={this.state.pokemonList}\n                  team={this.state.team}\n                />\n              )}\n            ></Route>\n            {/* <Route path=\"/battle\" component={Battle}></Route> */}\n            <Route\n              path=\"/pokedex\"\n              component={() => (\n                <Pokedex\n                  addPokemonToTeam={this.addPokemonToTeam}\n                  pokemonList={this.state.pokemonList}\n                  getPokemon={this.getPokemon}\n                  getNextPokemonList={this.getNextPokemonList}\n                  getPreviousPokemonList={this.getPreviousPokemonList}\n                  selectedPokemon={this.state.selectedPokemon}\n                  onPokemonSelect={this.onPokemonSelect}\n                  onFormSubmit={this.onTermSubmit}\n                />\n              )}\n            ></Route>\n          </Switch>\n        </Router>\n\n        {/* <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n            ></IconButton>\n            <Router>\n              <Typography variant=\"h6\">\n                <Link to=\"/\">Home</Link>\n              </Typography>\n              <Typography variant=\"h6\">\n                <Link to=\"/battle\">Battle</Link>\n              </Typography>\n              <Typography variant=\"h6\">\n                <Link to=\"/pokedex\">Pokedex</Link>\n              </Typography>\n              <Switch>\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route path=\"/battle\" component={Battle}></Route>\n                <Route\n                  path=\"/pokedex\"\n                  component={() => (\n                    <Pokedex\n                      pokemonList={this.state.pokemonList}\n                      getPokemon={this.getPokemon}\n                      getNextPokemonList={this.getNextPokemonList}\n                      getPreviousPokemonList={this.getPreviousPokemonList}\n                      selectedPokemon={this.state.selectedPokemon}\n                      onPokemonSelect={this.onPokemonSelect}\n                    />\n                  )}\n                ></Route>\n              </Switch>\n            </Router>\n          </Toolbar>\n        </AppBar> */}\n        {/* <NavBar\n          pokemonList={this.state.pokemonList}\n          getPokemon={this.getPokemon}\n          getNextPokemonList={this.getNextPokemonList}\n          getPreviousPokemonList={this.getPreviousPokemonList}\n          selectedPokemon={this.state.selectedPokemon}\n          onPokemonSelect={this.onPokemonSelect}\n        /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}